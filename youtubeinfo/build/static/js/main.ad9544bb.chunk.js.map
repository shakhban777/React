{"version":3,"sources":["components/result/result-item.jsx","components/spinner/spinner.js","components/result/results.jsx","components/search/search.jsx","services/youtube-service.js","components/error-indicator/error.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/app/app.jsx","index.js"],"names":["ResultItem","videoName","author","date","views","videoId","parsedDate","toString","neededDate","Date","toLocaleString","day","year","month","hour","minute","second","videoUrl","className","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","Body","Title","Subtitle","Collapse","title","width","height","src","frameBorder","allow","allowFullScreen","Spinner","Results","items","search","spinner","loading","elements","map","item","id","key","Search","onChange","onSubmit","value","Form","Group","controlId","Label","Control","type","placeholder","Button","variant","YoutubeService","_maxResults","_orderBy","_baseSearchURL","_baseStatisticURL","_apiKey","getResource","a","urlToFetch","fetch","response","ok","Error","status","json","getItems","data","snippet","channelTitle","_transformItem","filter","el","console","error","etag","publishTime","addViews","array","statistics","viewCount","view","viewedItems","Promise","all","then","catch","err","sort","b","ErrorIndicator","icon","alt","App","youtubeService","state","hasError","e","setState","target","preventDefault","this","updateItems","prevProps","prevState","snapshot","errorInfo","sortItems","sorted","results","Jumbotron","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad9544bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Accordion, Card} from \"react-bootstrap\";\r\nimport './result.scss';\r\n\r\nconst ResultItem = ({videoName, author, date, views, videoId}) => {\r\n   const parsedDate = date.toString();\r\n   const neededDate = new Date(parsedDate).toLocaleString(\"ru\", {\r\n      day: 'numeric',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      second: \"numeric\"\r\n   });\r\n   const videoUrl = `https://www.youtube.com/embed/${videoId}`\r\n\r\n   return (\r\n      <li className='list-group-item'>\r\n         <Accordion defaultActiveKey=\"1\">\r\n            <Card>\r\n               <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                  <Card.Body className='description'>\r\n                     <Card.Title>{videoName}</Card.Title>\r\n                     <Card.Subtitle className=\"mb-3\">Автор: <span className='text-muted'>{author}</span></Card.Subtitle>\r\n                     <Card.Subtitle className=\"mb-3\">Загружено: <span className='text-muted'>{neededDate}</span></Card.Subtitle>\r\n                     <Card.Subtitle className=\"mb-3\">Просмотров: <span className='text-muted'>{views}</span></Card.Subtitle>\r\n                  </Card.Body>\r\n               </Accordion.Toggle>\r\n               <Accordion.Collapse eventKey=\"0\" className='accord'>\r\n                  <div className='video-container'>\r\n                     <iframe title={videoId} width=\"560\" height=\"315\" src={videoUrl} frameBorder=\"0\"\r\n                             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                             allowFullScreen>\r\n                     </iframe>\r\n                  </div>\r\n               </Accordion.Collapse>\r\n            </Card>\r\n         </Accordion>\r\n      </li>\r\n   );\r\n}\r\nexport default ResultItem;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className=\"lds-css\">\r\n\t\t\t<div className=\"lds-double-ring\">\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport ResultItem from \"./result-item\";\r\nimport Spinner from \"../spinner/spinner\";\r\n\r\nconst Results = ({ items, search, loading }) => {\r\n\r\n   const spinner = loading ?  <Spinner/> : null\r\n   const elements = items.map(item => {\r\n      const {id, ...items} = item;\r\n      return (\r\n         <ResultItem {...items} key={id}/>\r\n      );\r\n   });\r\n\r\n   return (\r\n      <div className='result'>\r\n         <p>Результат поиска по запросу: \"{search}\"</p>\r\n         <ul className='list-group'>\r\n            {spinner}\r\n            {elements}\r\n         </ul>\r\n      </div>\r\n   );\r\n\r\n}\r\n\r\nexport default Results;","import React from \"react\";\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\nconst Search = ({onChange, onSubmit, value}) => {\r\n   return (\r\n      <Form className='mb-5' onSubmit={onSubmit}>\r\n         <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Поиск видео</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Введите название\" onChange={onChange} value={value}/>\r\n         </Form.Group>\r\n         <Button variant=\"primary\" type=\"submit\">\r\n            Поиск\r\n         </Button>\r\n      </Form>\r\n   );\r\n};\r\n\r\nexport default Search;","export default class YoutubeService {\r\n\r\n   _maxResults = 10;\r\n   _orderBy = 'date';\r\n   _baseSearchURL = 'https://youtube.googleapis.com/youtube/v3/search?';\r\n   _baseStatisticURL = 'https://www.googleapis.com/youtube/v3/videos?';\r\n   _apiKey = 'AIzaSyAZ9HXwcvjwkjV3mUA6z4JHlU-ASd1uy2g';\r\n\r\n   getResource = async (search) => {\r\n      const urlToFetch = `${this._baseSearchURL}part=snippet&maxResults=${this._maxResults}&order=${this._orderBy}&q=${search}&key=${this._apiKey}`;\r\n      const response = await fetch(urlToFetch);\r\n\r\n      if (!response.ok) {\r\n         throw new Error(`Could not fetch ${urlToFetch}, received ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n   }\r\n\r\n   getItems = async (search) => {\r\n      try {\r\n         const data = await this.getResource(search);\r\n         const items = data.items.map(item => {\r\n            // eslint-disable-next-line array-callback-return\r\n            if (item.snippet.channelTitle === item.snippet.title) return;      // because youtube API returns user profiles sometime\r\n            return this._transformItem(item);\r\n         });\r\n\r\n         return items.filter(function (el) {     // remove undefined results\r\n            return el != null;\r\n         });\r\n      } catch (err) {\r\n         console.error(err);\r\n      }\r\n   }\r\n\r\n   _transformItem = (item) => {\r\n      return {\r\n         id: item.etag,\r\n         videoId: item.id.videoId,\r\n         date: item.snippet.publishTime,\r\n         videoName: item.snippet.title,\r\n         author: item.snippet.channelTitle,\r\n      }\r\n   }\r\n\r\n   addViews = async (array) => {\r\n      try {\r\n         const viewedItems = await array.map(item => {\r\n            const urlToFetch = `${this._baseStatisticURL}part=statistics&id=${item.videoId}&key=${this._apiKey}`\r\n            return (async () => {\r\n               const response = await fetch(urlToFetch);\r\n\r\n               if (!response.ok) {\r\n                  throw new Error(`Could not fetch ${urlToFetch}, received ${response.status}`);\r\n               }\r\n\r\n               const data = await response.json();\r\n               const view = await data.items[0].statistics.viewCount;\r\n               return {...item, views: view};\r\n            })()\r\n         });\r\n\r\n         return Promise.all(viewedItems)\r\n            .then(item => item)\r\n            .catch(err => console.error(err));\r\n      } catch (err) {\r\n         console.error(err);\r\n      }\r\n   }\r\n\r\n   sortItems(items) {\r\n      return items.sort(function (a, b) {\r\n         return b.views - a.views;\r\n      });\r\n   }\r\n}","export default __webpack_public_path__ + \"static/media/error.1009d321.png\";","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport icon from './error.png'\r\n\r\nconst ErrorIndicator = () => {\r\n\treturn(\r\n\t\t<div className='error-indicator'>\r\n\t\t\t<img src={icon} alt=\"error-icon\" />\r\n\t\t\t<span className='boom'>BOOM!</span>\r\n\t\t\t<span>\r\n\t\t\t\tSomething has gone terribly wrong\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t(but we've already send specialists to fix it)\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ErrorIndicator;","import React, {Component} from 'react';\r\nimport {Jumbotron} from 'react-bootstrap';\r\nimport Results from \"../result/results\";\r\nimport Search from \"../search/search\";\r\nimport YoutubeService from \"../../services/youtube-service\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport './app.scss';\r\n\r\nexport default class App extends Component {\r\n\r\n   youtubeService = new YoutubeService();\r\n\r\n   state = {\r\n      value: '',\r\n      search: '',\r\n      loading: true,\r\n      hasError: false,\r\n      items: []\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.updateItems();\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (prevState.search !== this.state.search) {\r\n         this.updateItems();\r\n      }\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      this.setState({ hasError: true });\r\n   }\r\n\r\n   updateItems() {\r\n      const {getItems, addViews, sortItems} = this.youtubeService;\r\n      const {search} = this.state;\r\n\r\n      this.setState({\r\n         loading: true,\r\n      });\r\n\r\n      if (!search) return;\r\n\r\n      (async () => {\r\n         try {\r\n            const data = await getItems(search);\r\n            const items = await addViews(data);\r\n            const sorted = await sortItems(items);\r\n            await this.setState({items: sorted, loading: false});\r\n         } catch (err) {\r\n            await this.setState({loading: false, hasError: true});\r\n            console.error(err);\r\n         }\r\n      })()\r\n   }\r\n\r\n   onChange = (e) => {\r\n      this.setState({value: e.target.value});\r\n   }\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (!this.state.value) return\r\n      this.setState({search: this.state.value});\r\n      this.setState({value: '', items: []});\r\n   }\r\n\r\n   render() {\r\n      const {items, value, search, loading, hasError} = this.state;\r\n\r\n      if (hasError) {\r\n         return <ErrorIndicator/>\r\n      }\r\n\r\n      const results = search\r\n         ? <Results items={items} search={search} loading={loading}/>\r\n         : null;\r\n\r\n      return (\r\n         <div className='container app'>\r\n            <Jumbotron>\r\n               <Search value={value} onChange={this.onChange} onSubmit={this.onSubmit}/>\r\n               {results}\r\n            </Jumbotron>\r\n         </div>\r\n      );\r\n   }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app/app\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}